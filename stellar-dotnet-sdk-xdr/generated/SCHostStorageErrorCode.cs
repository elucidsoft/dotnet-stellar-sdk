// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  enum SCHostStorageErrorCode
    //  {
    //      HOST_STORAGE_UNKNOWN_ERROR = 0,
    //      HOST_STORAGE_EXPECT_CONTRACT_DATA = 1,
    //      HOST_STORAGE_READWRITE_ACCESS_TO_READONLY_ENTRY = 2,
    //      HOST_STORAGE_ACCESS_TO_UNKNOWN_ENTRY = 3,
    //      HOST_STORAGE_MISSING_KEY_IN_GET = 4,
    //      HOST_STORAGE_GET_ON_DELETED_KEY = 5
    //  };

    //  ===========================================================================
    public class SCHostStorageErrorCode
    {
        public enum SCHostStorageErrorCodeEnum
        {
            HOST_STORAGE_UNKNOWN_ERROR = 0,
            HOST_STORAGE_EXPECT_CONTRACT_DATA = 1,
            HOST_STORAGE_READWRITE_ACCESS_TO_READONLY_ENTRY = 2,
            HOST_STORAGE_ACCESS_TO_UNKNOWN_ENTRY = 3,
            HOST_STORAGE_MISSING_KEY_IN_GET = 4,
            HOST_STORAGE_GET_ON_DELETED_KEY = 5,
        }
        public SCHostStorageErrorCodeEnum InnerValue { get; set; } = default(SCHostStorageErrorCodeEnum);

        public static SCHostStorageErrorCode Create(SCHostStorageErrorCodeEnum v)
        {
            return new SCHostStorageErrorCode
            {
                InnerValue = v
            };
        }

        public static SCHostStorageErrorCode Decode(XdrDataInputStream stream)
        {
            int value = stream.ReadInt();
            switch (value)
            {
                case 0: return Create(SCHostStorageErrorCodeEnum.HOST_STORAGE_UNKNOWN_ERROR);
                case 1: return Create(SCHostStorageErrorCodeEnum.HOST_STORAGE_EXPECT_CONTRACT_DATA);
                case 2: return Create(SCHostStorageErrorCodeEnum.HOST_STORAGE_READWRITE_ACCESS_TO_READONLY_ENTRY);
                case 3: return Create(SCHostStorageErrorCodeEnum.HOST_STORAGE_ACCESS_TO_UNKNOWN_ENTRY);
                case 4: return Create(SCHostStorageErrorCodeEnum.HOST_STORAGE_MISSING_KEY_IN_GET);
                case 5: return Create(SCHostStorageErrorCodeEnum.HOST_STORAGE_GET_ON_DELETED_KEY);
                default:
                    throw new Exception("Unknown enum value: " + value);
            }
        }

        public static void Encode(XdrDataOutputStream stream, SCHostStorageErrorCode value)
        {
            stream.WriteInt((int)value.InnerValue);
        }
    }
}
