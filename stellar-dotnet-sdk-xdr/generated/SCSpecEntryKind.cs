// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  enum SCSpecEntryKind
    //  {
    //      SC_SPEC_ENTRY_FUNCTION_V0 = 0,
    //      SC_SPEC_ENTRY_UDT_STRUCT_V0 = 1,
    //      SC_SPEC_ENTRY_UDT_UNION_V0 = 2,
    //      SC_SPEC_ENTRY_UDT_ENUM_V0 = 3,
    //      SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0 = 4
    //  };

    //  ===========================================================================
    public class SCSpecEntryKind
    {
        public enum SCSpecEntryKindEnum
        {
            SC_SPEC_ENTRY_FUNCTION_V0 = 0,
            SC_SPEC_ENTRY_UDT_STRUCT_V0 = 1,
            SC_SPEC_ENTRY_UDT_UNION_V0 = 2,
            SC_SPEC_ENTRY_UDT_ENUM_V0 = 3,
            SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0 = 4,
        }
        public SCSpecEntryKindEnum InnerValue { get; set; } = default(SCSpecEntryKindEnum);

        public static SCSpecEntryKind Create(SCSpecEntryKindEnum v)
        {
            return new SCSpecEntryKind
            {
                InnerValue = v
            };
        }

        public static SCSpecEntryKind Decode(XdrDataInputStream stream)
        {
            int value = stream.ReadInt();
            switch (value)
            {
                case 0: return Create(SCSpecEntryKindEnum.SC_SPEC_ENTRY_FUNCTION_V0);
                case 1: return Create(SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_STRUCT_V0);
                case 2: return Create(SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_UNION_V0);
                case 3: return Create(SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_ENUM_V0);
                case 4: return Create(SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0);
                default:
                    throw new Exception("Unknown enum value: " + value);
            }
        }

        public static void Encode(XdrDataOutputStream stream, SCSpecEntryKind value)
        {
            stream.WriteInt((int)value.InnerValue);
        }
    }
}
