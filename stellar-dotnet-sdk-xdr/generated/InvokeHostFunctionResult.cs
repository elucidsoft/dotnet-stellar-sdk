// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  union InvokeHostFunctionResult switch (InvokeHostFunctionResultCode code)
    //  {
    //  case INVOKE_HOST_FUNCTION_SUCCESS:
    //      SCVal success;
    //  case INVOKE_HOST_FUNCTION_MALFORMED:
    //  case INVOKE_HOST_FUNCTION_TRAPPED:
    //      void;
    //  };

    //  ===========================================================================
    public class InvokeHostFunctionResult
    {
        public InvokeHostFunctionResult() { }

        public InvokeHostFunctionResultCode Discriminant { get; set; } = new InvokeHostFunctionResultCode();

        public SCVal Success { get; set; }
        public static void Encode(XdrDataOutputStream stream, InvokeHostFunctionResult encodedInvokeHostFunctionResult)
        {
            stream.WriteInt((int)encodedInvokeHostFunctionResult.Discriminant.InnerValue);
            switch (encodedInvokeHostFunctionResult.Discriminant.InnerValue)
            {
                case InvokeHostFunctionResultCode.InvokeHostFunctionResultCodeEnum.INVOKE_HOST_FUNCTION_SUCCESS:
                    SCVal.Encode(stream, encodedInvokeHostFunctionResult.Success);
                    break;
                case InvokeHostFunctionResultCode.InvokeHostFunctionResultCodeEnum.INVOKE_HOST_FUNCTION_MALFORMED:
                case InvokeHostFunctionResultCode.InvokeHostFunctionResultCodeEnum.INVOKE_HOST_FUNCTION_TRAPPED:
                    break;
            }
        }
        public static InvokeHostFunctionResult Decode(XdrDataInputStream stream)
        {
            InvokeHostFunctionResult decodedInvokeHostFunctionResult = new InvokeHostFunctionResult();
            InvokeHostFunctionResultCode discriminant = InvokeHostFunctionResultCode.Decode(stream);
            decodedInvokeHostFunctionResult.Discriminant = discriminant;
            switch (decodedInvokeHostFunctionResult.Discriminant.InnerValue)
            {
                case InvokeHostFunctionResultCode.InvokeHostFunctionResultCodeEnum.INVOKE_HOST_FUNCTION_SUCCESS:
                    decodedInvokeHostFunctionResult.Success = SCVal.Decode(stream);
                    break;
                case InvokeHostFunctionResultCode.InvokeHostFunctionResultCodeEnum.INVOKE_HOST_FUNCTION_MALFORMED:
                case InvokeHostFunctionResultCode.InvokeHostFunctionResultCodeEnum.INVOKE_HOST_FUNCTION_TRAPPED:
                    break;
            }
            return decodedInvokeHostFunctionResult;
        }
    }
}
