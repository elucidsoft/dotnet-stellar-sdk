// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  union SCContractCode switch (SCContractCodeType type)
    //  {
    //  case SCCONTRACT_CODE_WASM_REF:
    //      Hash wasm_id;
    //  case SCCONTRACT_CODE_TOKEN:
    //      void;
    //  };

    //  ===========================================================================
    public class SCContractCode
    {
        public SCContractCode() { }

        public SCContractCodeType Discriminant { get; set; } = new SCContractCodeType();

        public Hash WasmId { get; set; }
        public static void Encode(XdrDataOutputStream stream, SCContractCode encodedSCContractCode)
        {
            stream.WriteInt((int)encodedSCContractCode.Discriminant.InnerValue);
            switch (encodedSCContractCode.Discriminant.InnerValue)
            {
                case SCContractCodeType.SCContractCodeTypeEnum.SCCONTRACT_CODE_WASM_REF:
                    Hash.Encode(stream, encodedSCContractCode.WasmId);
                    break;
                case SCContractCodeType.SCContractCodeTypeEnum.SCCONTRACT_CODE_TOKEN:
                    break;
            }
        }
        public static SCContractCode Decode(XdrDataInputStream stream)
        {
            SCContractCode decodedSCContractCode = new SCContractCode();
            SCContractCodeType discriminant = SCContractCodeType.Decode(stream);
            decodedSCContractCode.Discriminant = discriminant;
            switch (decodedSCContractCode.Discriminant.InnerValue)
            {
                case SCContractCodeType.SCContractCodeTypeEnum.SCCONTRACT_CODE_WASM_REF:
                    decodedSCContractCode.WasmId = Hash.Decode(stream);
                    break;
                case SCContractCodeType.SCContractCodeTypeEnum.SCCONTRACT_CODE_TOKEN:
                    break;
            }
            return decodedSCContractCode;
        }
    }
}
