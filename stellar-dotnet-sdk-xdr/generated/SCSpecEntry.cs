// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  union SCSpecEntry switch (SCSpecEntryKind kind)
    //  {
    //  case SC_SPEC_ENTRY_FUNCTION_V0:
    //      SCSpecFunctionV0 functionV0;
    //  case SC_SPEC_ENTRY_UDT_STRUCT_V0:
    //      SCSpecUDTStructV0 udtStructV0;
    //  case SC_SPEC_ENTRY_UDT_UNION_V0:
    //      SCSpecUDTUnionV0 udtUnionV0;
    //  case SC_SPEC_ENTRY_UDT_ENUM_V0:
    //      SCSpecUDTEnumV0 udtEnumV0;
    //  case SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0:
    //      SCSpecUDTErrorEnumV0 udtErrorEnumV0;
    //  };

    //  ===========================================================================
    public class SCSpecEntry
    {
        public SCSpecEntry() { }

        public SCSpecEntryKind Discriminant { get; set; } = new SCSpecEntryKind();

        public SCSpecFunctionV0 FunctionV0 { get; set; }
        public SCSpecUDTStructV0 UdtStructV0 { get; set; }
        public SCSpecUDTUnionV0 UdtUnionV0 { get; set; }
        public SCSpecUDTEnumV0 UdtEnumV0 { get; set; }
        public SCSpecUDTErrorEnumV0 UdtErrorEnumV0 { get; set; }
        public static void Encode(XdrDataOutputStream stream, SCSpecEntry encodedSCSpecEntry)
        {
            stream.WriteInt((int)encodedSCSpecEntry.Discriminant.InnerValue);
            switch (encodedSCSpecEntry.Discriminant.InnerValue)
            {
                case SCSpecEntryKind.SCSpecEntryKindEnum.SC_SPEC_ENTRY_FUNCTION_V0:
                    SCSpecFunctionV0.Encode(stream, encodedSCSpecEntry.FunctionV0);
                    break;
                case SCSpecEntryKind.SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_STRUCT_V0:
                    SCSpecUDTStructV0.Encode(stream, encodedSCSpecEntry.UdtStructV0);
                    break;
                case SCSpecEntryKind.SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_UNION_V0:
                    SCSpecUDTUnionV0.Encode(stream, encodedSCSpecEntry.UdtUnionV0);
                    break;
                case SCSpecEntryKind.SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_ENUM_V0:
                    SCSpecUDTEnumV0.Encode(stream, encodedSCSpecEntry.UdtEnumV0);
                    break;
                case SCSpecEntryKind.SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0:
                    SCSpecUDTErrorEnumV0.Encode(stream, encodedSCSpecEntry.UdtErrorEnumV0);
                    break;
            }
        }
        public static SCSpecEntry Decode(XdrDataInputStream stream)
        {
            SCSpecEntry decodedSCSpecEntry = new SCSpecEntry();
            SCSpecEntryKind discriminant = SCSpecEntryKind.Decode(stream);
            decodedSCSpecEntry.Discriminant = discriminant;
            switch (decodedSCSpecEntry.Discriminant.InnerValue)
            {
                case SCSpecEntryKind.SCSpecEntryKindEnum.SC_SPEC_ENTRY_FUNCTION_V0:
                    decodedSCSpecEntry.FunctionV0 = SCSpecFunctionV0.Decode(stream);
                    break;
                case SCSpecEntryKind.SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_STRUCT_V0:
                    decodedSCSpecEntry.UdtStructV0 = SCSpecUDTStructV0.Decode(stream);
                    break;
                case SCSpecEntryKind.SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_UNION_V0:
                    decodedSCSpecEntry.UdtUnionV0 = SCSpecUDTUnionV0.Decode(stream);
                    break;
                case SCSpecEntryKind.SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_ENUM_V0:
                    decodedSCSpecEntry.UdtEnumV0 = SCSpecUDTEnumV0.Decode(stream);
                    break;
                case SCSpecEntryKind.SCSpecEntryKindEnum.SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0:
                    decodedSCSpecEntry.UdtErrorEnumV0 = SCSpecUDTErrorEnumV0.Decode(stream);
                    break;
            }
            return decodedSCSpecEntry;
        }
    }
}
