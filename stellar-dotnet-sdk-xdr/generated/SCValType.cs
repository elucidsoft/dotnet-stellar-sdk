// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  enum SCValType
    //  {
    //      SCV_U63 = 0,
    //      SCV_U32 = 1,
    //      SCV_I32 = 2,
    //      SCV_STATIC = 3,
    //      SCV_OBJECT = 4,
    //      SCV_SYMBOL = 5,
    //      SCV_BITSET = 6,
    //      SCV_STATUS = 7
    //  };

    //  ===========================================================================
    public class SCValType
    {
        public enum SCValTypeEnum
        {
            SCV_U63 = 0,
            SCV_U32 = 1,
            SCV_I32 = 2,
            SCV_STATIC = 3,
            SCV_OBJECT = 4,
            SCV_SYMBOL = 5,
            SCV_BITSET = 6,
            SCV_STATUS = 7,
        }
        public SCValTypeEnum InnerValue { get; set; } = default(SCValTypeEnum);

        public static SCValType Create(SCValTypeEnum v)
        {
            return new SCValType
            {
                InnerValue = v
            };
        }

        public static SCValType Decode(XdrDataInputStream stream)
        {
            int value = stream.ReadInt();
            switch (value)
            {
                case 0: return Create(SCValTypeEnum.SCV_U63);
                case 1: return Create(SCValTypeEnum.SCV_U32);
                case 2: return Create(SCValTypeEnum.SCV_I32);
                case 3: return Create(SCValTypeEnum.SCV_STATIC);
                case 4: return Create(SCValTypeEnum.SCV_OBJECT);
                case 5: return Create(SCValTypeEnum.SCV_SYMBOL);
                case 6: return Create(SCValTypeEnum.SCV_BITSET);
                case 7: return Create(SCValTypeEnum.SCV_STATUS);
                default:
                    throw new Exception("Unknown enum value: " + value);
            }
        }

        public static void Encode(XdrDataOutputStream stream, SCValType value)
        {
            stream.WriteInt((int)value.InnerValue);
        }
    }
}
