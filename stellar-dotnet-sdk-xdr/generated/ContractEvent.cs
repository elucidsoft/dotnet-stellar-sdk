// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  struct ContractEvent
    //  {
    //      // We can use this to add more fields, or because it
    //      // is first, to change ContractEvent into a union.
    //      ExtensionPoint ext;
    //  
    //      Hash* contractID;
    //      ContractEventType type;
    //  
    //      union switch (int v)
    //      {
    //      case 0:
    //          struct
    //          {
    //              SCVec topics;
    //              SCVal data;
    //          } v0;
    //      }
    //      body;
    //  };

    //  ===========================================================================
    public class ContractEvent
    {
        public ContractEvent() { }
        public ExtensionPoint Ext { get; set; }
        public Hash ContractID { get; set; }
        public ContractEventType Type { get; set; }
        public ContractEventBody Body { get; set; }

        public static void Encode(XdrDataOutputStream stream, ContractEvent encodedContractEvent)
        {
            ExtensionPoint.Encode(stream, encodedContractEvent.Ext);
            if (encodedContractEvent.ContractID != null)
            {
                stream.WriteInt(1);
                Hash.Encode(stream, encodedContractEvent.ContractID);
            }
            else
            {
                stream.WriteInt(0);
            }
            ContractEventType.Encode(stream, encodedContractEvent.Type);
            ContractEventBody.Encode(stream, encodedContractEvent.Body);
        }
        public static ContractEvent Decode(XdrDataInputStream stream)
        {
            ContractEvent decodedContractEvent = new ContractEvent();
            decodedContractEvent.Ext = ExtensionPoint.Decode(stream);
            int ContractIDPresent = stream.ReadInt();
            if (ContractIDPresent != 0)
            {
                decodedContractEvent.ContractID = Hash.Decode(stream);
            }
            decodedContractEvent.Type = ContractEventType.Decode(stream);
            decodedContractEvent.Body = ContractEventBody.Decode(stream);
            return decodedContractEvent;
        }

        public class ContractEventBody
        {
            public ContractEventBody() { }

            public int Discriminant { get; set; } = new int();

            public ContractEventV0 V0 { get; set; }
            public static void Encode(XdrDataOutputStream stream, ContractEventBody encodedContractEventBody)
            {
                stream.WriteInt((int)encodedContractEventBody.Discriminant);
                switch (encodedContractEventBody.Discriminant)
                {
                    case 0:
                        ContractEventV0.Encode(stream, encodedContractEventBody.V0);
                        break;
                }
            }
            public static ContractEventBody Decode(XdrDataInputStream stream)
            {
                ContractEventBody decodedContractEventBody = new ContractEventBody();
                int discriminant = stream.ReadInt();
                decodedContractEventBody.Discriminant = discriminant;
                switch (decodedContractEventBody.Discriminant)
                {
                    case 0:
                        decodedContractEventBody.V0 = ContractEventV0.Decode(stream);
                        break;
                }
                return decodedContractEventBody;
            }

            public class ContractEventV0
            {
                public ContractEventV0() { }
                public SCVec Topics { get; set; }
                public SCVal Data { get; set; }

                public static void Encode(XdrDataOutputStream stream, ContractEventV0 encodedContractEventV0)
                {
                    SCVec.Encode(stream, encodedContractEventV0.Topics);
                    SCVal.Encode(stream, encodedContractEventV0.Data);
                }
                public static ContractEventV0 Decode(XdrDataInputStream stream)
                {
                    ContractEventV0 decodedContractEventV0 = new ContractEventV0();
                    decodedContractEventV0.Topics = SCVec.Decode(stream);
                    decodedContractEventV0.Data = SCVal.Decode(stream);
                    return decodedContractEventV0;
                }

            }
        }
    }
}
