// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  enum SCHostObjErrorCode
    //  {
    //      HOST_OBJECT_UNKNOWN_ERROR = 0,
    //      HOST_OBJECT_UNKNOWN_REFERENCE = 1,
    //      HOST_OBJECT_UNEXPECTED_TYPE = 2,
    //      HOST_OBJECT_OBJECT_COUNT_EXCEEDS_U32_MAX = 3,
    //      HOST_OBJECT_OBJECT_NOT_EXIST = 4,
    //      HOST_OBJECT_VEC_INDEX_OUT_OF_BOUND = 5,
    //      HOST_OBJECT_CONTRACT_HASH_WRONG_LENGTH = 6
    //  };

    //  ===========================================================================
    public class SCHostObjErrorCode
    {
        public enum SCHostObjErrorCodeEnum
        {
            HOST_OBJECT_UNKNOWN_ERROR = 0,
            HOST_OBJECT_UNKNOWN_REFERENCE = 1,
            HOST_OBJECT_UNEXPECTED_TYPE = 2,
            HOST_OBJECT_OBJECT_COUNT_EXCEEDS_U32_MAX = 3,
            HOST_OBJECT_OBJECT_NOT_EXIST = 4,
            HOST_OBJECT_VEC_INDEX_OUT_OF_BOUND = 5,
            HOST_OBJECT_CONTRACT_HASH_WRONG_LENGTH = 6,
        }
        public SCHostObjErrorCodeEnum InnerValue { get; set; } = default(SCHostObjErrorCodeEnum);

        public static SCHostObjErrorCode Create(SCHostObjErrorCodeEnum v)
        {
            return new SCHostObjErrorCode
            {
                InnerValue = v
            };
        }

        public static SCHostObjErrorCode Decode(XdrDataInputStream stream)
        {
            int value = stream.ReadInt();
            switch (value)
            {
                case 0: return Create(SCHostObjErrorCodeEnum.HOST_OBJECT_UNKNOWN_ERROR);
                case 1: return Create(SCHostObjErrorCodeEnum.HOST_OBJECT_UNKNOWN_REFERENCE);
                case 2: return Create(SCHostObjErrorCodeEnum.HOST_OBJECT_UNEXPECTED_TYPE);
                case 3: return Create(SCHostObjErrorCodeEnum.HOST_OBJECT_OBJECT_COUNT_EXCEEDS_U32_MAX);
                case 4: return Create(SCHostObjErrorCodeEnum.HOST_OBJECT_OBJECT_NOT_EXIST);
                case 5: return Create(SCHostObjErrorCodeEnum.HOST_OBJECT_VEC_INDEX_OUT_OF_BOUND);
                case 6: return Create(SCHostObjErrorCodeEnum.HOST_OBJECT_CONTRACT_HASH_WRONG_LENGTH);
                default:
                    throw new Exception("Unknown enum value: " + value);
            }
        }

        public static void Encode(XdrDataOutputStream stream, SCHostObjErrorCode value)
        {
            stream.WriteInt((int)value.InnerValue);
        }
    }
}
