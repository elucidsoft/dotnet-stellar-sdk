// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  union ChangeTrustResult switch (ChangeTrustResultCode code)
    //  {
    //  case CHANGE_TRUST_SUCCESS:
    //      void;
    //  case CHANGE_TRUST_MALFORMED:
    //  case CHANGE_TRUST_NO_ISSUER:
    //  case CHANGE_TRUST_INVALID_LIMIT:
    //  case CHANGE_TRUST_LOW_RESERVE:
    //  case CHANGE_TRUST_SELF_NOT_ALLOWED:
    //  case CHANGE_TRUST_TRUST_LINE_MISSING:
    //  case CHANGE_TRUST_CANNOT_DELETE:
    //  case CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES:
    //      void;
    //  };

    //  ===========================================================================
    public class ChangeTrustResult
    {
        public ChangeTrustResult() { }

        public ChangeTrustResultCode Discriminant { get; set; } = new ChangeTrustResultCode();

        public static void Encode(XdrDataOutputStream stream, ChangeTrustResult encodedChangeTrustResult)
        {
            stream.WriteInt((int)encodedChangeTrustResult.Discriminant.InnerValue);
            switch (encodedChangeTrustResult.Discriminant.InnerValue)
            {
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_SUCCESS:
                    break;
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_MALFORMED:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_NO_ISSUER:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_INVALID_LIMIT:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_LOW_RESERVE:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_SELF_NOT_ALLOWED:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_TRUST_LINE_MISSING:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_CANNOT_DELETE:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES:
                    break;
            }
        }
        public static ChangeTrustResult Decode(XdrDataInputStream stream)
        {
            ChangeTrustResult decodedChangeTrustResult = new ChangeTrustResult();
            ChangeTrustResultCode discriminant = ChangeTrustResultCode.Decode(stream);
            decodedChangeTrustResult.Discriminant = discriminant;
            switch (decodedChangeTrustResult.Discriminant.InnerValue)
            {
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_SUCCESS:
                    break;
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_MALFORMED:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_NO_ISSUER:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_INVALID_LIMIT:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_LOW_RESERVE:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_SELF_NOT_ALLOWED:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_TRUST_LINE_MISSING:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_CANNOT_DELETE:
                case ChangeTrustResultCode.ChangeTrustResultCodeEnum.CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES:
                    break;
            }
            return decodedChangeTrustResult;
        }
    }
}
