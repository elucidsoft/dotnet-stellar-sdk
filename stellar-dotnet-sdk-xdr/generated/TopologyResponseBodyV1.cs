// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  struct TopologyResponseBodyV1
    //  {
    //      PeerStatList inboundPeers;
    //      PeerStatList outboundPeers;
    //  
    //      uint32 totalInboundPeerCount;
    //      uint32 totalOutboundPeerCount;
    //  
    //      uint32 maxInboundPeerCount;
    //      uint32 maxOutboundPeerCount;
    //  };

    //  ===========================================================================
    public class TopologyResponseBodyV1
    {
        public TopologyResponseBodyV1() { }
        public PeerStatList InboundPeers { get; set; }
        public PeerStatList OutboundPeers { get; set; }
        public Uint32 TotalInboundPeerCount { get; set; }
        public Uint32 TotalOutboundPeerCount { get; set; }
        public Uint32 MaxInboundPeerCount { get; set; }
        public Uint32 MaxOutboundPeerCount { get; set; }

        public static void Encode(XdrDataOutputStream stream, TopologyResponseBodyV1 encodedTopologyResponseBodyV1)
        {
            PeerStatList.Encode(stream, encodedTopologyResponseBodyV1.InboundPeers);
            PeerStatList.Encode(stream, encodedTopologyResponseBodyV1.OutboundPeers);
            Uint32.Encode(stream, encodedTopologyResponseBodyV1.TotalInboundPeerCount);
            Uint32.Encode(stream, encodedTopologyResponseBodyV1.TotalOutboundPeerCount);
            Uint32.Encode(stream, encodedTopologyResponseBodyV1.MaxInboundPeerCount);
            Uint32.Encode(stream, encodedTopologyResponseBodyV1.MaxOutboundPeerCount);
        }
        public static TopologyResponseBodyV1 Decode(XdrDataInputStream stream)
        {
            TopologyResponseBodyV1 decodedTopologyResponseBodyV1 = new TopologyResponseBodyV1();
            decodedTopologyResponseBodyV1.InboundPeers = PeerStatList.Decode(stream);
            decodedTopologyResponseBodyV1.OutboundPeers = PeerStatList.Decode(stream);
            decodedTopologyResponseBodyV1.TotalInboundPeerCount = Uint32.Decode(stream);
            decodedTopologyResponseBodyV1.TotalOutboundPeerCount = Uint32.Decode(stream);
            decodedTopologyResponseBodyV1.MaxInboundPeerCount = Uint32.Decode(stream);
            decodedTopologyResponseBodyV1.MaxOutboundPeerCount = Uint32.Decode(stream);
            return decodedTopologyResponseBodyV1;
        }
    }
}
