// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten
using System;

namespace stellar_dotnet_sdk.xdr
{

    // === xdr source ============================================================

    //  union AccountMergeResult switch (AccountMergeResultCode code)
    //  {
    //  case ACCOUNT_MERGE_SUCCESS:
    //      int64 sourceAccountBalance; // how much got transferred from source account
    //  case ACCOUNT_MERGE_MALFORMED:
    //  case ACCOUNT_MERGE_NO_ACCOUNT:
    //  case ACCOUNT_MERGE_IMMUTABLE_SET:
    //  case ACCOUNT_MERGE_HAS_SUB_ENTRIES:
    //  case ACCOUNT_MERGE_SEQNUM_TOO_FAR:
    //  case ACCOUNT_MERGE_DEST_FULL:
    //  case ACCOUNT_MERGE_IS_SPONSOR:
    //      void;
    //  };

    //  ===========================================================================
    public class AccountMergeResult
    {
        public AccountMergeResult() { }

        public AccountMergeResultCode Discriminant { get; set; } = new AccountMergeResultCode();

        public Int64 SourceAccountBalance { get; set; }
        public static void Encode(XdrDataOutputStream stream, AccountMergeResult encodedAccountMergeResult)
        {
            stream.WriteInt((int)encodedAccountMergeResult.Discriminant.InnerValue);
            switch (encodedAccountMergeResult.Discriminant.InnerValue)
            {
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_SUCCESS:
                    Int64.Encode(stream, encodedAccountMergeResult.SourceAccountBalance);
                    break;
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_MALFORMED:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_NO_ACCOUNT:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_IMMUTABLE_SET:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_HAS_SUB_ENTRIES:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_SEQNUM_TOO_FAR:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_DEST_FULL:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_IS_SPONSOR:
                    break;
            }
        }
        public static AccountMergeResult Decode(XdrDataInputStream stream)
        {
            AccountMergeResult decodedAccountMergeResult = new AccountMergeResult();
            AccountMergeResultCode discriminant = AccountMergeResultCode.Decode(stream);
            decodedAccountMergeResult.Discriminant = discriminant;
            switch (decodedAccountMergeResult.Discriminant.InnerValue)
            {
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_SUCCESS:
                    decodedAccountMergeResult.SourceAccountBalance = Int64.Decode(stream);
                    break;
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_MALFORMED:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_NO_ACCOUNT:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_IMMUTABLE_SET:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_HAS_SUB_ENTRIES:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_SEQNUM_TOO_FAR:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_DEST_FULL:
                case AccountMergeResultCode.AccountMergeResultCodeEnum.ACCOUNT_MERGE_IS_SPONSOR:
                    break;
            }
            return decodedAccountMergeResult;
        }
    }
}
